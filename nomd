#!/bin/bash
set -e

# set up temporary file
NOMD_TEMP_DIR="$(mktemp -d --tmpdir nomd.XXXXXXXX)"
NOMD_CHECK_RESULTS="$NOMD_TEMP_DIR/check_results"
NOMD_CHECK_STDERR="$NOMD_TEMP_DIR/check_errors"
NOMD_NOTIFY_STDERR="$NOMD_TEMP_DIR/notify_errors"

# clean up on exit
on_exit_or_error()
{
    # reprint captured errors on stderr
    if [ -s "$NOMD_CHECK_STDERR" ]; then
	cat "$NOMD_CHECK_STDERR" >&2
    fi
    if [ -s "$NOMD_NOTIFY_STDERR" ]; then
	cat "$NOMD_NOTIFY_STDERR" >&2
    fi
    
    # autoclean tempfile
    rm -r "$NOMD_TEMP_DIR"
}
trap on_exit_or_error EXIT

# run checks
(
    for CHECK in check/*.check ; do
	source "$CHECK"
    done
    for TOOL in tool/*.tool ; do
	source "$TOOL"
    done
    if [ -e check.local ]; then
	source check.local
    else
	echo 'I:nomd_checks:no check.local found, using check.default instead'
	source check.default
    fi

    # remove progress bar if interactive

) 3>&1 > "$NOMD_CHECK_RESULTS" 2> "$NOMD_CHECK_STDERR" 

# append meta errors from checks
while read LINE; do
    echo "C:nomd_checks:$LINE"
done < "$NOMD_CHECK_STDERR" >> "$NOMD_CHECK_RESULTS"

# prepare some variables
NOMD_CRIT_COUNT=$(grep -c ^C "$NOMD_CHECK_RESULTS" || true)
NOMD_WARN_COUNT=$(grep -c ^W "$NOMD_CHECK_RESULTS" || true)
NOMD_INFO_COUNT=$(grep -c ^I "$NOMD_CHECK_RESULTS" || true)
if [ $NOMD_CRIT_COUNT -gt 0 ]; then
    NOMD_HIGHEST_SEVERITY=C
elif [ $NOMD_WARN_COUNT -gt 0 ]; then
    NOMD_HIGHEST_SEVERITY=W
else
    NOMD_HIGHEST_SEVERITY=I
fi

# run notifications
(
    for NOTIFY in notify/*.notify; do
	source "$NOTIFY"
    done
    if [ -e notify.local ]; then
	source notify.local
    else
	echo 'I:nomd_notify:no notify.local found, using notify.default instead' >> "$NOMD_CHECK_RESULTS"
	source notify.default
    fi
) 2> "$NOMD_NOTIFY_STDERR"
