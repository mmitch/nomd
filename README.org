* nomd

Generally, nomd is a simple nomitoring distribution.
Specifically, nomd is no omd.

** [5/7] project status-o-meter

- [ ] I actually know of one other user
- [ ] might be usable for somebody else
- [X] detected a real-world problem
- [X] works for me on at least three machines
- [X] basic features implemented
- [X] a wild first code appears!
- [X] some vague ideas and rumors

** [10/12] feature fahrplan

- [X] [8/8] plugin architecture for checks
  - [X] load
  - [X] diskfree
    - [X] basic operation
    - [X] configure by stdin
  - [X] tcp connect
  - [X] tcp connect with content check
  - [X] file tests
    - [X] exists
    - [X] does not exist
    - [X] contains
    - [X] younger than
    - [X] wildcards
  - [X] http response code
  - [X] http content check
  - [X] apt available updates
- [X] [3/3] plugin architecture for notifications
  - [X] mail
  - [X] dbus/notify-send
  - [X] terminal output
- [X] main configuration file is plain bash and is simply run
- [X] provide default configuration, use local configuration instead
  if available
- [X] pass all nomd commandline arguments to checkers and
  notifications
  - maximum flexibility in local scripts
- [X] convenience variables for notifications
  - count of all severities, highest severity
- [X] wrappers for scripts in other languages
- [X] support local configuration with git branches
- [ ] add copyright notices, project homepage and other boring stuff
- [ ] dependency handling
  - document dependencies per helper
  - global fetch and display
- [X] generate documentation
  - describe methods and parameters per helper
  - global fetch and display
- [X] describe parameter handling
  - all helpers should provide sensible defaults
  - call without parameters should be possible

** instructions

*** installation

- run ~make check-deps~ to see if all dependencies are installed
  - if Perl modules are missing, you can install them manually
    (eg. via your distribution packages to get updates) or, if you use
    a local ~cpanm~ installation, just run ~make install-perl-deps~

*** execution

- run ~./nomd~ (alternatively run ~make~ or ~make run~)

*** configuration

- copy ~check.default~ to ~check.local~ and edit to your needs
- copy ~notify.default~ to ~notify.local~ and edit to your needs
- run ~./nomd~ (alternatively run ~make~ or ~make run~)

*** documentation

- to see a list of all available checks and notifications, run
  ~./nomdoc~ without any parameters
- to see detailled information (including parameters) for checks or
  notifications, run ~./nomdoc~ with a regexp to select what to
  display (~check~ selects all checks, ~.~ selects everything, ~http~
  selects http related checks)

** protocol

*** checks

Checks write one or more lines to stdout in the format

: SEVERITY:CHECK:INFORMATION

where

- SEVERITY :: is one of ~C~ (critical), ~W~ (warning) or ~I~
              (informational - quite verbose, also used for debugging)
- CHECK :: is the name of the check that wrote the line
- INFORMATION :: is freetext information about the details of the
                 check

*** notifications

Notifications are called with these environment variables set:

- NOMD_CHECK_RESULTS :: pointing to a file with the complete results
     of the preceding checks
- NOMD_CRIT_COUNT :: number of critical check results
- NOMD_WARN_COUNT :: number of warning check results
- NOMD_INFO_COUNT :: number of informational check results
- NOMD_HIGHEST_SEVERITY :: either ~C~, ~W~ or ~I~ depending on the
     worst check result

** things for thoughts

- convenience function for writing the protocol lines that
  automatically detects the name of the current check
- switch README from Org to Markdown?
  - Org is cooler, but the Github rendering is slightly sucky
- add a notification that mails the local config/settings?
- checks
  - check_mk wrapper
  - memfree - but what to check? memory? swap? both? warning/crit
    thresholds?
  - ntpd checker
- notifications
  - pushbullet
