#!/usr/bin/env bash
#
# Copyright (C) 2020,2023  Christian Garbs <mitch@cgarbs.de>
# Licensed under GNU GPL v3 or later.
#
# This file is part of nomd.
#
# nomd is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# nomd is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with nomd.  If not, see <http://www.gnu.org/licenses/>.
#

##SHELLDEP /sbin/zpool

check_zpool_health()
##CHECKDSC check ZFS zpool health
#
{
    local status

    local zpool=/sbin/zpool

    "$zpool" list -Hp -o name,health | while read -r pool health; do
	if [ "$health" = ONLINE ]; then
	    status=I
	else
	    status=C
	fi
	echo "$status:zpool_health:pool $pool is $health"
    done

    if [ "$( "$zpool" status -x | wc -l )" -gt 1 ]; then
	echo "W:zpool_status:have a look a zpool status, something might be wrong"
    fi
}

check_zpool_capacity()
##CHECKDSC check ZFS zpool capacity
#
##PARMNAME $1
##PARMDESC zpool name to check
##PARMDFLT tank
#
##PARMNAME $2
##PARMDESC capacity warning threshold [0..100]
##PARMDFLT 90
#
##PARMNAME $3
##PARMDESC capacity critical threshold [0..100]
##PARMDFLT 95
{
    local zpool=/sbin/zpool

    # receive parameters and set defaults
    local pool="${1:-tank}" warn="${2:-90}" crit="${3:-90}"

    # get capacity
    local cap
    cap=$("$zpool" list -Hp -o capacity "$pool")

    # check ca
    local status=I
    if [ "$cap" -gt "$crit" ]; then
	status=C
    elif [ "$cap" -gt "$warn" ]; then
	status=W
    fi

    # output
    echo "${status}:zpool_capacity:${cap}% used on ${pool}"
}
